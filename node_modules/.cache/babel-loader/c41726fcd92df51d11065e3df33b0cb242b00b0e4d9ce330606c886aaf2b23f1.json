{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import PropTypes from 'prop-types';\n// import './login.css';\n// // // send api calls\n// // import { sendToBackendPost } from '../../../../sharedFunctions/apiCall';\n// // redux function\n// import { activatePopup } from '../../../../redux/action/popupActions';\n// // static images\n// import logoCompny from '../../../../images/green.svg';\n// import TextInputBlock from '../../Micros/TextInputBlock';\n\n// function PassConfirm({\n//     dataSend\n// }) {\n//     const dispatch = useDispatch();\n//     const [InputClassvals, setInputClassVal] = useState({ inputName: '', nameClass: '' });\n//     const [formValues, setFormValues] = useState({});\n//     const getvaluesForm = (Inputname, value) => {\n//         const tempFormVal = formValues;\n//         // check if it the check value\n//         if (typeof (value) === 'boolean') {\n//             if(value) {\n//                 tempFormVal[Inputname] = 'yes';\n//             } else {\n//                 delete tempFormVal[Inputname];\n//             }\n//         } else {\n//             tempFormVal[Inputname] = value;\n//         }\n//         setFormValues({\n//             ...tempFormVal,\n//         });\n\n//         setInputClassVal({ inputName: Inputname, nameClass: 'errorInput' }); // remember to remove this\n//     };\n//     const submitForm = async (e) => {\n//         e.preventDefault();\n//         dataSend.data['password'] = formValues.password;\n//         const ansbck = await sendToBackendPost(dataSend.link, dataSend.data);\n//         if (typeof (ansbck) === 'object' && ansbck.state === 'success') {\n//             if (typeof (ansbck.data) === 'string') {\n//                 dispatch(activatePopup('info', { head: 'Success', text: ansbck.data }));\n//             } else {\n//                 dispatch(activatePopup('info', { head: 'Success', text: 'Event was successful with complicated response.' }));\n//             }\n//         } else if (typeof (ansbck) === 'object' && ansbck.state !== 'success') {\n//             if (typeof (ansbck.data) === 'string') {\n//                 dispatch(activatePopup('error', { head: ansbck.state, text: ansbck.data }));\n//             } else {\n//                 dispatch(activatePopup('error', { head: ansbck.state, text: 'Something went wrong' }));\n//             }\n//         } else if (typeof (ansbck) ===  'string') {\n//             dispatch(activatePopup('error', { head: 'Error!', text: ansbck }));\n//         }else {\n//             dispatch(activatePopup('error', { head: 'Error!', text: 'failed to perform this action' }));\n//         }\n//     }\n//     return (\n//         <div className=\"loginMainPopup\">\n//             <div className=\"loginPopupTopSect\">\n//                 <img src={logoCompny} className=\"logoLogin\" alt=\"company logo\" />\n//             </div>\n//             <div className=\"LoginContentHolder\">\n//                 <h2 className=\"LoginHeaderMainPopup\">Enter Password to Confirm</h2>\n//                 <form className=\"LoginFormPopup\" onSubmit={(e) => submitForm(e)}>\n//                     <TextInputBlock\n//                         InputName=\"password\"\n//                         LabelName=\"Password\"\n//                         placeHolder=\"password\"\n//                         Type=\"password\"\n//                         InputStyleClass={InputClassvals.inputName === 'password' ? InputClassvals.nameClass : ''}\n//                         defaultVal=\"\"\n//                         ChangeFun={getvaluesForm}\n//                         is_Required={true}\n//                     />\n//                     <div className=\"buttonHolderLogin\">\n//                         <button type=\"submit\" className=\"loginButtonPopup\">Confirm</button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n\n// PassConfirm.propTypes = {\n//     dataSend: PropTypes.object.isRequired,\n// }\n\n// export default PassConfirm;","map":{"version":3,"names":[],"sources":["/Users/ansi/Desktop/Desktop_folders/PROJECTS/journey-app/src/subPages/Popups/Login/PassConfirm.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import PropTypes from 'prop-types';\n// import './login.css';\n// // // send api calls\n// // import { sendToBackendPost } from '../../../../sharedFunctions/apiCall';\n// // redux function\n// import { activatePopup } from '../../../../redux/action/popupActions';\n// // static images\n// import logoCompny from '../../../../images/green.svg';\n// import TextInputBlock from '../../Micros/TextInputBlock';\n\n// function PassConfirm({\n//     dataSend\n// }) {\n//     const dispatch = useDispatch();\n//     const [InputClassvals, setInputClassVal] = useState({ inputName: '', nameClass: '' });\n//     const [formValues, setFormValues] = useState({});\n//     const getvaluesForm = (Inputname, value) => {\n//         const tempFormVal = formValues;\n//         // check if it the check value\n//         if (typeof (value) === 'boolean') {\n//             if(value) {\n//                 tempFormVal[Inputname] = 'yes';\n//             } else {\n//                 delete tempFormVal[Inputname];\n//             }\n//         } else {\n//             tempFormVal[Inputname] = value;\n//         }\n//         setFormValues({\n//             ...tempFormVal,\n//         });\n\n//         setInputClassVal({ inputName: Inputname, nameClass: 'errorInput' }); // remember to remove this\n//     };\n//     const submitForm = async (e) => {\n//         e.preventDefault();\n//         dataSend.data['password'] = formValues.password;\n//         const ansbck = await sendToBackendPost(dataSend.link, dataSend.data);\n//         if (typeof (ansbck) === 'object' && ansbck.state === 'success') {\n//             if (typeof (ansbck.data) === 'string') {\n//                 dispatch(activatePopup('info', { head: 'Success', text: ansbck.data }));\n//             } else {\n//                 dispatch(activatePopup('info', { head: 'Success', text: 'Event was successful with complicated response.' }));\n//             }\n//         } else if (typeof (ansbck) === 'object' && ansbck.state !== 'success') {\n//             if (typeof (ansbck.data) === 'string') {\n//                 dispatch(activatePopup('error', { head: ansbck.state, text: ansbck.data }));\n//             } else {\n//                 dispatch(activatePopup('error', { head: ansbck.state, text: 'Something went wrong' }));\n//             }\n//         } else if (typeof (ansbck) ===  'string') {\n//             dispatch(activatePopup('error', { head: 'Error!', text: ansbck }));\n//         }else {\n//             dispatch(activatePopup('error', { head: 'Error!', text: 'failed to perform this action' }));\n//         }\n//     }\n//     return (\n//         <div className=\"loginMainPopup\">\n//             <div className=\"loginPopupTopSect\">\n//                 <img src={logoCompny} className=\"logoLogin\" alt=\"company logo\" />\n//             </div>\n//             <div className=\"LoginContentHolder\">\n//                 <h2 className=\"LoginHeaderMainPopup\">Enter Password to Confirm</h2>\n//                 <form className=\"LoginFormPopup\" onSubmit={(e) => submitForm(e)}>\n//                     <TextInputBlock\n//                         InputName=\"password\"\n//                         LabelName=\"Password\"\n//                         placeHolder=\"password\"\n//                         Type=\"password\"\n//                         InputStyleClass={InputClassvals.inputName === 'password' ? InputClassvals.nameClass : ''}\n//                         defaultVal=\"\"\n//                         ChangeFun={getvaluesForm}\n//                         is_Required={true}\n//                     />\n//                     <div className=\"buttonHolderLogin\">\n//                         <button type=\"submit\" className=\"loginButtonPopup\">Confirm</button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n\n// PassConfirm.propTypes = {\n//     dataSend: PropTypes.object.isRequired,\n// }\n\n// export default PassConfirm;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}