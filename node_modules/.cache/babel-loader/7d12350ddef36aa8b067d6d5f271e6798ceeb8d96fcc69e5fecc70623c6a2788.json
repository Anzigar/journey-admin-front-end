{"ast":null,"code":"var _jsxFileName = \"/Users/ansi/Desktop/Desktop_folders/PROJECTS/journey-app/src/pages/Admin/Inputs/TextSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './textSearch.css';\n// action functions\nimport { activatePopup } from '../../../redux/action/popupActions';\n// functions\nimport checkIfNotEmptyText from '../../../sharedFunctions/checkIfNotEmpty';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextSearch({\n  PlaceHolder,\n  defaultVal,\n  searchFun\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const [currentVal, setCurrentVal] = useState('');\n  const submitSearchValue = e => {\n    e.preventDefault();\n    if (checkIfNotEmptyText(currentVal)) {\n      searchFun(currentVal);\n    } else {\n      //  dispatch error info\n      const data = {\n        text: 'You need to insert name or email to search',\n        head: 'Error!'\n      };\n      dispatch(activatePopup('error', data));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TextSearchMainDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formSearchText\",\n      onSubmit: e => submitSearchValue(e),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentTextSearch\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: PlaceHolder,\n          value: defaultVal,\n          onChange: e => setCurrentVal(e.target.value),\n          className: \"inputTextSearch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"SubmitTextSearchButton\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-symbols-rounded\",\n            children: \"search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(TextSearch, \"c2aU1kWlzkIRgHYCDhs/yuAmsJE=\", false, function () {\n  return [useDispatch];\n});\n_c = TextSearch;\nTextSearch.propTypes = {\n  PlaceHolder: PropTypes.string.isRequired,\n  defaultVal: PropTypes.string.isRequired,\n  searchFun: PropTypes.func.isRequired\n};\nexport default TextSearch;\nvar _c;\n$RefreshReg$(_c, \"TextSearch\");","map":{"version":3,"names":["React","useState","useDispatch","PropTypes","activatePopup","checkIfNotEmptyText","jsxDEV","_jsxDEV","TextSearch","PlaceHolder","defaultVal","searchFun","_s","dispatch","currentVal","setCurrentVal","submitSearchValue","e","preventDefault","data","text","head","className","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","func","$RefreshReg$"],"sources":["/Users/ansi/Desktop/Desktop_folders/PROJECTS/journey-app/src/pages/Admin/Inputs/TextSearch.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './textSearch.css';\n// action functions\nimport { activatePopup } from '../../../redux/action/popupActions';\n// functions\nimport checkIfNotEmptyText from '../../../sharedFunctions/checkIfNotEmpty';\n\n\nfunction TextSearch({\n    PlaceHolder, defaultVal, searchFun\n}) {\n    const dispatch = useDispatch();\n    const [currentVal, setCurrentVal] = useState('');\n    const submitSearchValue = (e) => {\n        e.preventDefault();\n        if(checkIfNotEmptyText(currentVal)) {\n            searchFun(currentVal);\n        } else {\n            //  dispatch error info\n            const data = {\n                text: 'You need to insert name or email to search',\n                head: 'Error!',\n            }\n            dispatch(activatePopup('error', data));\n        }\n    }\n    return (\n        <div className=\"TextSearchMainDiv\">\n            <form className=\"formSearchText\" onSubmit={(e) => submitSearchValue(e)}>\n                <div className=\"contentTextSearch\">\n                    <input type=\"text\" placeholder={PlaceHolder} value={defaultVal} onChange={(e) => setCurrentVal(e.target.value)} className=\"inputTextSearch\" />\n                    <button type=\"submit\" className=\"SubmitTextSearchButton\">\n                        <span className=\"material-symbols-rounded\">\n                            search\n                        </span>\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nTextSearch.propTypes = {\n    PlaceHolder: PropTypes.string.isRequired,\n    defaultVal: PropTypes.string.isRequired,\n    searchFun: PropTypes.func.isRequired,\n};\n\nexport default TextSearch;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,kBAAkB;AACzB;AACA,SAASC,aAAa,QAAQ,oCAAoC;AAClE;AACA,OAAOC,mBAAmB,MAAM,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3E,SAASC,UAAUA,CAAC;EAChBC,WAAW;EAAEC,UAAU;EAAEC;AAC7B,CAAC,EAAE;EAAAC,EAAA;EACC,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMe,iBAAiB,GAAIC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAGb,mBAAmB,CAACS,UAAU,CAAC,EAAE;MAChCH,SAAS,CAACG,UAAU,CAAC;IACzB,CAAC,MAAM;MACH;MACA,MAAMK,IAAI,GAAG;QACTC,IAAI,EAAE,4CAA4C;QAClDC,IAAI,EAAE;MACV,CAAC;MACDR,QAAQ,CAACT,aAAa,CAAC,OAAO,EAAEe,IAAI,CAAC,CAAC;IAC1C;EACJ,CAAC;EACD,oBACIZ,OAAA;IAAKe,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAC9BhB,OAAA;MAAMe,SAAS,EAAC,gBAAgB;MAACE,QAAQ,EAAGP,CAAC,IAAKD,iBAAiB,CAACC,CAAC,CAAE;MAAAM,QAAA,eACnEhB,OAAA;QAAKe,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAC9BhB,OAAA;UAAOkB,IAAI,EAAC,MAAM;UAACC,WAAW,EAAEjB,WAAY;UAACkB,KAAK,EAAEjB,UAAW;UAACkB,QAAQ,EAAGX,CAAC,IAAKF,aAAa,CAACE,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;UAACL,SAAS,EAAC;QAAiB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9I1B,OAAA;UAAQkB,IAAI,EAAC,QAAQ;UAACH,SAAS,EAAC,wBAAwB;UAAAC,QAAA,eACpDhB,OAAA;YAAMe,SAAS,EAAC,0BAA0B;YAAAC,QAAA,EAAC;UAE3C;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACrB,EAAA,CAhCQJ,UAAU;EAAA,QAGEN,WAAW;AAAA;AAAAgC,EAAA,GAHvB1B,UAAU;AAkCnBA,UAAU,CAAC2B,SAAS,GAAG;EACnB1B,WAAW,EAAEN,SAAS,CAACiC,MAAM,CAACC,UAAU;EACxC3B,UAAU,EAAEP,SAAS,CAACiC,MAAM,CAACC,UAAU;EACvC1B,SAAS,EAAER,SAAS,CAACmC,IAAI,CAACD;AAC9B,CAAC;AAED,eAAe7B,UAAU;AAAC,IAAA0B,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}